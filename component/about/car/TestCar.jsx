/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 model-opt.glb
Author: Gesy (https://sketchfab.com/mrgesy)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/dodge-challenger-2c1f18d2f0214cb7a746fc5dd2baeebe
Title: Dodge CHALLENGER
*/

import React, {useEffect, useRef, useState} from 'react'
import { useGLTF } from '@react-three/drei'
import {useControls} from "leva";
import {useFrame} from "@react-three/fiber";
import {MeshStandardMaterial} from "three";

export function CarModelTest(props) {
    const { nodes, materials } = useGLTF('/models/dodge/model-opt.glb');
    const carRef = useRef();
    const [engineOn, setEngineOn] = useState(false)
    const {position} = useControls('Card Settings',{
        position : props.position,
    });
    const shitMaterial = new MeshStandardMaterial({
        color: '#e70000',
        metalness: 0.3,
        roughness: 0.15,
        emissiveIntensity : 0.1,

    });
    useFrame((state) => {
        if (!carRef.current || !engineOn) return

        const t = state.clock.getElapsedTime()

        // tiny vibration using sin/cos
        carRef.current.position.y = position[1] + Math.sin(t * 20) * 0.0013
        carRef.current.rotation.z = Math.sin(t * 10) * 0.00002
        carRef.current.rotation.x = Math.cos(t * 12) * 0.00002
    })
    useEffect(() => {
        return () => {
            materials.DiamondOutside?.dispose();
            nodes.Cylinder.geometry?.dispose();
        };
    }, []);

    return (
        <group {...props} castShadow={true} receiveShadow={true} onClick={() => setEngineOn(true)} position={position} ref={carRef} dispose={null}>
            <mesh geometry={nodes.Object_2.geometry}
                  // material={shitMaterial}
                  material={materials.PaletteMaterial001}
                  position={[-263.682, -71.486, 340.623]} rotation={[-Math.PI / 2, 0, 0]} scale={266.429} />
            <mesh geometry={nodes.Object_3.geometry} material={materials.PaletteMaterial002} position={[-263.68, -58.187, 95.281]} rotation={[-Math.PI / 2, 0, 0]} scale={89.786} />
            <mesh geometry={nodes.Object_4.geometry} material={materials.Material__304} position={[-263.686, -58.189, 91.422]} rotation={[-Math.PI / 2, 0, 0]} scale={89.742} />
            <mesh geometry={nodes.Object_5.geometry} material={materials.PaletteMaterial003} position={[-271.921, -154.757, 333.788]} rotation={[-Math.PI / 2, 0, 0]} scale={333.697} />
            <mesh geometry={nodes.Object_13.geometry} material={materials.PaletteMaterial004} position={[-263.687, -61.384, 328.179]} rotation={[-Math.PI / 2, 0, 0]} scale={251.515} />
            <mesh geometry={nodes.Object_39.geometry} material={materials.PaletteMaterial005} position={[-263.686, -86.605, 576.616]} rotation={[-Math.PI / 2, 0, 0]} scale={89.672} />
        </group>
    )
}

useGLTF.preload('/models/dodge/model-opt.glb')
